//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SampleMVC.DBLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ERPSystemEntities : DbContext
    {
        public ERPSystemEntities()
            : base("name=ERPSystemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BankData> BankDatas { get; set; }
        public virtual DbSet<BookMaster> BookMasters { get; set; }
        public virtual DbSet<DepartmentMaster> DepartmentMasters { get; set; }
        public virtual DbSet<DesignationMaster> DesignationMasters { get; set; }
        public virtual DbSet<EmployeeMaster> EmployeeMasters { get; set; }
        public virtual DbSet<ExpenseMaster> ExpenseMasters { get; set; }
        public virtual DbSet<InventoryMaster> InventoryMasters { get; set; }
        public virtual DbSet<LibraryMaster> LibraryMasters { get; set; }
        public virtual DbSet<NewUser> NewUsers { get; set; }
        public virtual DbSet<PublisherMaster> PublisherMasters { get; set; }
        public virtual DbSet<SecurityQuestionMaster> SecurityQuestionMasters { get; set; }
        public virtual DbSet<StudentMaster> StudentMasters { get; set; }
        public virtual DbSet<TransactionMaster> TransactionMasters { get; set; }
        public virtual DbSet<FitnessMaster> FitnessMasters { get; set; }
        public virtual DbSet<CountryMaster> CountryMasters { get; set; }
    
        public virtual ObjectResult<GetBankData_Result> GetBankData(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBankData_Result>("GetBankData", idParameter);
        }
    
        public virtual ObjectResult<GetEmployeeDetails_Result> GetEmployeeDetails(Nullable<int> employeeId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeDetails_Result>("GetEmployeeDetails", employeeIdParameter);
        }
    
        public virtual int GetUsers(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetUsers", userIdParameter);
        }
    
        public virtual int InsertBankData(string bankName, string transAmt, Nullable<int> accType, ObjectParameter output)
        {
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var transAmtParameter = transAmt != null ?
                new ObjectParameter("TransAmt", transAmt) :
                new ObjectParameter("TransAmt", typeof(string));
    
            var accTypeParameter = accType.HasValue ?
                new ObjectParameter("AccType", accType) :
                new ObjectParameter("AccType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertBankData", bankNameParameter, transAmtParameter, accTypeParameter, output);
        }
    }
}
